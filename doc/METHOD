Please see POSTBACK.

== For writing stateless RESTful API

GET
POST
PUT
DELETE

To simulate PUT and DELETE from browser, send a POST request with _method=put or
_method=delete in the request body.

@GETs("/", "/articles")
class ArticleIndex extends Action {
  def execute {
    ...
  }
}

@GET("/articles/:id")
class ArticleShow extends Action {
  def execute {
    ...
  }
}

== For writing normal form submit for browsers without JavaScript and cookie

POST1

No support built-in at this moment, because Xitrum focuses on modern browsers.

You can use "stateless RESTful API" above and add on your own:
* Anti CSRF token
* Session ID (and/or session data) embedded in request URL
* Validation
