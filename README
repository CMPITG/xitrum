Xitrum is a lightweight Scala web framework and web server on top of Netty:
* It fills the gap between Scalatra and Lift:
  More powerful than Scalatra but less complex than Lift.
  You can easily define URL routings (Scalatra style) and POSTbacks (Lift style).
* Asynchronous, in the spirit of Netty.
* Type-safe, in the spirit of Scala.
* Stateless, by default session is stored in cookie.

+-----------------+
|    Your app     |
+-----------------+
|      Xitrum     |
| +-------------+ |
| |  Framework  | |
| +-------------+ |
| | Middlewares | |
| +-------------+ |
| | HTTP Server | |
| +-------------+ |
+-----------------+
|      Netty      |
+-----------------+

See doc directory for more information.

== SBT project source directory layout

A typical blog application will have this directory layout:

config
  blog.properties
  logback.properties
  xitrum.properties
  i18n
    en.po
    ja.po
    mylib
      en.po
      ja.po
lib
  jrebel.jar
lib_managed
project
  build.properties
  build
    Project.scala
public
  upload
src
  main
    scala
      blog
        action
          ArticleIndex.scala
          ArticleShow.scala
          ArticleNewEdit.scala
        helper
          ArticleHelper.scala
        model
          Article.scala
    resources
      public
        blog
          css
          img
          js
README

== SBT project dependency

To add Xitrum to project dependencies:
"tv.cntt" %% "xitrum" % "1.0-SNAPSHOT"

Xitrum uses SLF4J 1.6.1. You must provide an SLF4J implentation that compatible
with SLF4J 1.6.1, like logback-classic 0.9.27:
"ch.qos.logback" % "logback-classic" % "0.9.27"

== Deployed directory layout

bin
  runner.sh               <-- Script to start the web server
config                    <-- Config files are outside .jar files, edit any time you want
  blog.properties             They are put in classpath by runner.sh
  logback.properties
  xitrum.properties
  i18n
    en.po
    ja.po
    mylib
      en.po
      ja.po
lib
  blog.jar                <-- css/img/js are concrete thus packaged here
  ...
public
  upload                  <-- Directory to store user uploaded files
README                        It may be a symlink
