Middleware for Xitrum to support Squeryl.

== DB drivers

You need Java 6 or above if you use JDBC4 drivers.

Connection pool using c3p0 is included. You must manually add driver for your
specific DB.

For example, for PostgreSQL or MySQL, add to your SBT project definition
something like:

override def libraryDependencies =
  Set(
    "postgresql" % "postgresql"           % "8.4-701.jdbc4" % "compile->default",
    //"mysql"      % "mysql-connector-java" % "5.1.13"        % "compile->default"
  ) ++ super.libraryDependencies

For Oracle, you must download the driver manualy:
http://www.oracle.com/technology/software/tech/java/sqlj%5Fjdbc/index.html

== Middleware order

Example:

    // Failsafe should be outside Squeryl.
    // If Failsafe is inside Squeryl, all exceptions would be swallowed.
    var app: App = new XTApp
    app = Squeryl.wrap(app)
    app = Failsafe.wrap(app)
    app = Dispatcher.wrap(app, routes, errorRoutes, controllerPaths)
    app = MethodOverride.wrap(app)
    app = ParamsParser.wrap(app)
    app = Static.wrap(app)

    val s = new Server(app)
    s.start

== Project directory layout

A typical blog application will have this directory layout:

config
  blog.properties
  c3p0.properties
  log4j.properties
lib
  jrebel.jar
lib_managed
migrate
  schema1.sql
  schema2.sql
project
public
  css
  img
  js
src
  main
    scala
      blog
        controller
          Articles.scala
        helper
          ArticleHelper.scala
        model
          Article.scala
          Schema.scala
    resources
      blog
        view
          articles
            index.scaml
            show.scaml
tmp
  scalate
